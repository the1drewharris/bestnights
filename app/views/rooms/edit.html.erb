<header>
  <h1 class="prop-title">Edit Room</h1>
</header>
  <div id="container-main" class="editrooms">
    <!-- <form accept-charset="UTF-8" action="/rooms/1" class="edit_room" id="edit_room_1" method="post"> -->
    <%= form_for @room, :html => {:class => "edit_room", :id => "edit_room_1"} do |f| %>
      <div style="margin:0;padding:0;display:inline">
        <input name="utf8" type="hidden" value="&#x2713;" />
        <input name="_method" type="hidden" value="put" />
        <input name="authenticity_token" type="hidden" value="6tqlXrsLLQZxGVd1I6PkAKSSl3nVh/jZueuuSuDEkrI=" />
      </div>
      <fieldset>
			  <ul>	  	
			  	<li>
			  		<%= f.label "Addional adult fee" %>
			  		<%= f.text_field(:additionaladultfee, class: "textfield") %>
			  	</li>
			  	<li>
			  		<%= f.label :starting_inventory %>
			  		<%= f.text_field(:starting_inventory, class: "textfield") %>
			  	</li>
			  	<li>
			  		<%= f.label "Bed Numbers" %>
			  		<%= f.text_field(:bed_numbers, class: "textfield") %>
			  	</li>
					<br />
		  	<% if current_user.new_signup? %>
		  		<%= f.hidden_field :hotel_id, :value => @hotel.id %>
		  	<% else %>
			  	<li>
			  		<%= f.label :hotel %>
			  		<%= f.select :hotel_id, options_for_select(@hotels.map{|s|[s.name, s.id]}, @room.hotel.id), {}, {class: "selectbox"} %>
			  	</li>
		  	<% end %>
		  	<li>
		  		<%= f.label "Room Type" %>
		  		<%= f.select :room_type_id, options_for_select(RoomType.all.map{|s|[s.room_type, s.id]}, @room.room_type.id), {:selected => @room.room_type_id}, {class: "selectbox"} %>
		  	</li>
		  	<li>
		  		<%= f.label "Room Sub Type" %>
		  		<%= f.select :room_sub_type_id, options_for_select(@room_sub_types.map{|s|[s.name, s.id]}, @room.room_sub_type_id),{:selected => @room.room_sub_type_id} %>
		  		<%= link_to "Manage Sub Type", room_sub_types_path %>
		  	</li>
		  	<li>
		  		<%= f.label "Max People" %>
		  		<%= f.text_field(:max_people, class: "textfield") %>
		  	</li>
		  	<li>
		  		<%= f.label "Max Additional People Allowed" %>
		  		<%= f.text_field(:aditionaladults, class: "textfield") %>
		  	</li>
		  	<li class="flwidth">
		  		<%= f.label :description %>
		  		<%= f.text_area :description, class: "textarea" %>
		  	</li>
		  	<li class="flwidth">							
					<label for="client_photos">Photos</label>
					<span class="drag-message">Click below or drag and drop to add pictures</span>
					<br />
					<div class="dropzone drag-drop-div" id="room-dropzone" />
				</li>
		  	<li class="flwidth">
					<span class="formLabel">Amenities and Facilities</span>
					<div class="checklist">
						<ul>
							
							<% @room_attributes.each do |attr| %>
								<li>
									<input name="client[attributes][<%= attr.id %>]" type="checkbox" class="check" <%= "checked" if attr.rooms.include?(@room) %>>
									<label for="client[attributes]"><%= attr.attr %></label>
								</li>
							<% end %>
						</ul>
					</div>
				</li>
		  </ul>	
		</fieldset>
    <fieldset class="formactions">
      <input name="commit" type="submit" value="Update Room" />
    </fieldset>
  <!-- </form> -->
  <% end %>
</div>


<script type="text/javascript">
	$(document).ready(function(){	
		var room_id = '<%= @room.id %>'
		Dropzone.options.roomDropzone = {
			url: "/room_photos/"+room_id,
			addRemoveLinks: true,
			dictRemoveFileConfirmation: "Are you sure you want to remove this file?",
			paramName: "picture",
			success: function(file, response){
				file.id = response.id
			},
			init: function () {
				<% @photos.each do |photo| %>
					var mockFile = {id: "<%= photo.id %>", name: "<%= photo.picture_file_name %>", size: "<%= photo.picture_file_size %>", type: "<%= photo.picture_content_type %>" };
					this.options.addedfile.call(this, mockFile);
					this.options.thumbnail.call(this, mockFile, "<%= photo.picture.url %>");
				<% end %>
      },
      removedfile: function(file) {				
				$.ajax({
					type: 'DELETE',
					url: "/room_photos",
					data: { id: file.id, status: file.status},
					dataType: 'json'
					});
					var _ref;
					return (_ref = file.previewElement) != null ? _ref.parentNode.removeChild(file.previewElement) : void 0; 
      
			}		 
		}
		$("#room_room_type_id").change(function(){
			// alert($(this).val())
			var data = {type_id: $(this).val()}
			$.ajax({
				type: "get",
	      dataType: "json",
	      url: "/get_sub_type",
	      data: data,
	      success: function(data){
	      	console.log(data)
	      	$("#room_room_sub_type_id").html("");
	      	if(data != ""){
	      		$("#room_room_sub_type_id").append("<option value="+ data[0]["id"] +">"+ data[0]["name"] +"</option>")
	      	}
	      	else{
	      		$("select").remove("#room_room_sub_type_id");
	      		$("li#subtype").append("<input id='room_room_sub_type_name' name='room[room_sub_type_name]' size='30' type='text'>")
	      	}
	      }
			})
		})
	});
	
</script>